@page "/Administration/Words/";
@page "/Administration/Words/{PageNumber:int}";
@page "/Administration/Words/{WordID}";
@inject Services.Database db;
@using System.Data.SqlClient;
@using iSketch.app.Shared.Admin.TableEditor;
@using iSketch.app.Shared.Body;
@using iSketch.app.Shared.Controls; 

@if (WordID == null)
{
    <PageTitle Title="Word List" />
    <TableEditor PageNumber="PageNumber"
                 SQLCon="db.DBCon"
                 PagePath="/Administration/Words"
                 TableName="[Words.Difficulty]"
                 VisibleRows='new List<string>() { "WordID", "Word", "Difficulty", "Score" }'
                 VisibleRowsTitles='new List<string>() { "WordID", "Word", "Difficulty", "Score" }' />
}
else
{
    if (!InitEditWord())
    {
        <PageTitle Title="Word does not exist!" />
        return;
    }
    <PageTitle Title='@("Editing word: " + @WordValue)' />
    <hr />
    <CNumber Label="Score" Value="@ScoreValue.ToString()" />
    <CText Enabled="false" Label="Difficulty" Value="@DifficultyValue" />
}

@code {
    [Parameter]
    public int PageNumber { get; set; }
    [Parameter]
    public string WordID { get; set; }
    private string WordValue { get; set; } = "";
    private int ScoreValue { get; set; } = 0;
    private string DifficultyValue { get; set; } = "";
    private bool InitEditWord()
    {
        try
        {
            if (!Guid.TryParse(WordID, out Guid id)) return false;
            SqlCommand cmd = new SqlCommand("SELECT TOP(1) Word, Score, Difficulty FROM [Words.Difficulty] WHERE WordID = '" + WordID.ToString() + "'", db.DBCon);
            SqlDataReader rdr = cmd.ExecuteReader();
            rdr.Read();
            WordValue = rdr.GetString(0);
            ScoreValue = rdr.GetInt32(1);
            DifficultyValue = rdr.GetString(2);
            rdr.Close();
            return true;
        }
        catch (Exception)
        {
            return false;
        }
    }
}