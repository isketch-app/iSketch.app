@inject IJSRuntime js;

<button name="@Name" id="@ID" class="CButton @("em" + (int)Emphasis)" @onclick="CButtClick">
    @if (Icon != "")
    {
        <span class="icon">@Icon</span>
    }
    @if (IconURL != "")
    {
        <span class="icon" style="background-image:url('@IconURL');"></span>
    }
    <span class="text">@ChildContent</span>
    <div class="load">
        <span class="spinner"></span>
    </div>
</button>

@code {
    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }
    [Parameter]
    public string Icon { get; set; } = "";
    [Parameter]
    public string IconURL { get; set; } = "";
    [Parameter]
    public string Name { get; set; }
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public EmphasisStyles Emphasis { get; set; } = EmphasisStyles.High;
    private bool IsClickedAlready = false;
    private string ID = "x" + Guid.NewGuid().ToString();
    private async void CButtClick(MouseEventArgs e)
    {
        if (IsClickedAlready) return;
        IsClickedAlready = true;
        await OnClick.InvokeAsync(e);
        await js.InvokeVoidAsync("eval", "try { document.getElementById('" + ID + "').classList.remove('clicked'); } catch(e) { }");
        IsClickedAlready = false;
    }
    public enum EmphasisStyles : int
    {
        Low = 1,
        Medium = 2,
        High = 3
    }
}