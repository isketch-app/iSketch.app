<Popup AllowBreakOut="AllowBreakOut" OnFadeOut="OnFadeOut" @ref="Popup">
    @if (Header != "")
    {
        <div class="header">@Header</div>
    }
    <div class="content">@ChildContent</div>
    @if (OnDismissSet)
    {
        <DialogButtonContainer>
            <CButton OnClick="@(() => OnDismiss.InvokeAsync(this))" Emphasis="Emphasis.Low">Dismiss</CButton>
        </DialogButtonContainer>
    }
</Popup>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public string Header { get; set; } = "";
    [Parameter]
    public bool AllowBreakOut { get; set; } = true;
    [Parameter]
    public EventCallback OnFadeOut { get; set; }
    [Parameter]
    public EventCallback<Dialog> OnDismiss {
        get
        {
            return pOnDismiss;
        }
        set
        {
            pOnDismiss = value;
            OnDismissSet = true;
        }
    }
    public async Task FadeOut()
    {
        await Popup.FadeOut();
    }
    public async Task FadeIn()
    {
        await Popup.FadeIn();
    }
    private Popup Popup;
    private EventCallback<Dialog> pOnDismiss;
    private bool OnDismissSet = false;
}