@inject User user;
@inject EventHookScoped ehs; 
@inject Database db; 

<span>
    <Authenticated>
        @if (user.ProfilePictureID == null)
        {
            <RightMenuItem FMID="user" Icon="" />
        }
        else
        {
            <RightMenuItem FMID="user" Photo="@("/_Photo/profile-picture/" + user.ProfilePictureID)" />
        }
    </Authenticated>
    <Authenticated Invert="true">
        <RightMenuItem FMID="user" Icon="" />
    </Authenticated>
    <RightMenuItem FMID="general" Icon="" />
</span>

<FloaterMenu FMID="user">
    <div class="u-top">
        <div class="u-bg">
            <div class="u-image">
                <Authenticated>
                @if (user.ProfilePictureID != null)
                {
                    <div style="background-image:url('/_Photo/profile-picture/@user.ProfilePictureID')"></div>
                }
                </Authenticated>
            </div>
        </div>
        <Authenticated>
            <div class="u-name">@@@(user.UserName)</div>
        </Authenticated>
        <Authenticated Invert="true">
            <div class="u-name">iSketch.app</div>
        </Authenticated>
    </div>
    <div fmid class="u-menu">
        <Authenticated>
            <a href="/Account"><CMenuItem Icon="" Text="My Account" /></a>
            <CMenuItem Icon="" Text="Sign out" OnClick="() => user.Logoff()" />
        </Authenticated>
        <Authenticated Invert="true">
            <CMenuItem Icon="" Text="Sign in / Sign up" OnClick="ehs.OnLoginButtonPressed" />
        </Authenticated>
    </div>
</FloaterMenu>

<FloaterMenu FMID="general">
    <div fmid>
        <a href="/About"><CMenuItem Icon="" Text="About iSketch.app" /></a>
        <a href="/Rules"><CMenuItem Icon="" Text="Rules" /></a>
        <a href="/Help"><CMenuItem Icon="" Text="Help" /></a>
        <hr />
        <a href="/TermsOfService"><CMenuItem Icon="" Text="Terms of Service" /></a>
        <a href="/Privacy"><CMenuItem Icon="" Text="Privacy Policy" /></a>
    </div>
</FloaterMenu>

@code {
    protected override void OnInitialized()
    {
        ehs.AccountPhotoChanged += AccountPhotoChanged;
        base.OnInitialized();
    }
    private void AccountPhotoChanged(object o, EventArgs args)
    {
        StateHasChanged();
    }
}